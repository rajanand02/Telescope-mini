{
  "name": "mup",
  "version": "0.1.12",
  "description": "Production Quality Meteor Deplouments",
  "dependencies": {
    "nodemiral": "0.3.x",
    "cjson": "0.2.1",
    "uuid": "1.4.x",
    "colors": "0.6.x"
  },
  "bin": {
    "mup": "./bin/mup"
  },
  "author": {
    "name": "Arunoda Susiripala",
    "email": "arunoda.susiripala@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/arunoda/meteor-up.git"
  },
  "license": "MIT",
  "readme": "# Meteor UP\n\n#### Production Quality Meteor Deployments\n\nMeteor Up (mup for short) is a command line tool that allows you to deploy any meteor app into your own server. It supports Ubuntu 12.04 or higher servers from any Cloud Infrastructure Provider.\n\n**Table of Contents**\n\n- [Features](#features)\n- [Server Configuration](#server-configuration)\n- [Installation](#installation)\n- [Creating a Meteor Up Project](#creating-a-meteor-up-project)\n- [Example File](#example-file)\n- [Setting Up a Server](#setting-up-a-server)\n    - [Server Setup Details](#server-setup-details)\n- [Deploying an App](#deploying-an-app)\n    - [Deploy Wait Time](#deploy-wait-time)\n    - [Multiple Deployment Targets](#multiple-deployment-targets)\n- [Access Logs](#access-logs)\n- [Reconfiguring & Restarting](#reconfiguring--restarting)\n\n### Features\n\n* Single command server setup\n* Single command deployment\n* Environmental Variables management\n* Support for [`settings.json`](http://docs.meteor.com/#meteor_settings)\n* Password or Private Key(pem) based server authentication\n* Access, logs from the terminal (supports log tailing)\n\n### Server Configuration\n\n* Auto-Restart if the app crashed (using forever)\n* Auto-Start after the server reboot (using upstart)\n* Stepdown User Privileges\n* Revert to the previous version, if the deployment failed\n* Support for **Hot Code Reload**\n* Secured MongoDB Installation (Optional)\n* Pre-Installed PhantomJS (Optional)\n\n### Installation\n\n    npm install -g mup\n\nIf you are looking for password based authentication, you need to [install sshpass](https://gist.github.com/arunoda/7790979) on your local development machine.\n\n### Creating a Meteor Up Project\n\n    mkdir ~/my-meteor-deployment\n    cd ~/my-meteor-deployment\n    mup init\n\nThis will create two files in your Meteor Up project directory, which are:\n\n  * mup.json - Meteor Up configuration file\n  * settings.json - Settings for Meteor's [settings API](http://docs.meteor.com/#meteor_settings)\n\n`mup.json` is commented and easy to follow (it supports JavaScript comments)\n\n### Example File\n\n```js\n{\n  //server authentication info\n  \"servers\": [\n    {\n      \"host\": \"123.456.789.012\",\n      \"username\": \"root\",\n      \"password\": \"x7fj29dhs0\"\n      //or pem file (ssh based authentication)\n      //\"pem\": \"~/.ssh/id_rsa\"\n    }\n  ],\n\n  //install MongoDB in the server, does not destroy local mongo db on future setup\n  \"setupMongo\": true,\n  \n  //WARNING: Nodejs is required! Only skip if you already have nodejs installed on server.\n  \"setupNode\": true,\n  \n  //WARNING: If nodeVersion omitted will setup 0.10.25 by default. Do not use v, only version number.\n  \"nodeVersion\": \"0.10.25\",\n  \n  //install PhantomJS in the server\n  \"setupPhantom\": true,\n\n  //location of app (local directory)\n  \"app\": \"/Users/arunoda/Meteor/my-app\",\n\n  //configure environmental\n  \"env\": {\n    \"PORT\": 80,\n    \"ROOT_URL\": \"http://myapp.com\",\n    \"MONGO_URL\": \"mongodb://arunoda:fd8dsjsfh7@hanso.mongohq.com:10023/MyApp\",\n    \"MAIL_URL\": \"smtp://postmaster%40myapp.mailgun.org:adj87sjhd7s@smtp.mailgun.org:587/\"\n  },\n\n  //meteor-up checks if the app comes online just after the deployment\n  //before mup checks that, it will wait for no. of seconds configured below\n  \"deployCheckWaitTime\": 15\n}\n```\n\n### Setting Up a Server\n\n    mup setup\n\nThis will setup the server for the mup deployments. It will take around 2-5 minutes depending on the server's performance and network availability.\n\n#### Server Setup Details\n\nThis is how Meteor Up will configure the server for you. This information will help you to customize server for your needs.\n\n* your app is lives in `/opt/meteor/app`\n* mup uses upstart with a config file at `/etc/init/meteor.conf`\n* you can start and stop the app with upstart: `start meteor` and `stop meteor`\n* logs are located at: `/var/log/upstart/app.log`\n* MongoDB installed and bind to the local interface (cannot access from the outside)\n* `mongo` is the name of the database\n\nFor more information see [`lib/taskLists.js`](https://github.com/arunoda/meteor-up/blob/master/lib/taskLists.js).\n\n### Deploying an App\n\n    mup deploy\n\nThis will bundle the meteor project and deploy it to the server.\n\n#### Deploy Wait Time\n\nMeteor-Up checks for if the deployment is successful or not just after the deployment. By default, it will wait 10 seconds before the check. You can configure the wait time with `deployCheckWaitTime` option in the `mup.json`\n\n#### Multiple Deployment Targets\n\nYou can use an array to deploy to multiple servers at once. \n\nTo deploy to *different* environments (e.g. staging, production, etc.), use separate Meteor Up configurations in separate directories, with each directory containing separate `mup.json` and `settings.json` files, and the `mup.json` files' `app` field pointing back to your app's local directory. \n\n#### Custom Meteor Binary\n\nSometime, you might be using Meteor from a git checkout or using `mrt`. By default Meteor Up uses `meteor`. You can ask Meteor Up to use the correct binary with `meteorBinary` option.\n\n~~~js\n{\n  ...\n  \"meteorBinary\": \"~/bin/meteor/meteor\"\n  ...\n}\n~~~\n\n### Access Logs\n\n    mup logs -f\n\nMup can tail logs from the server and it supports all the options of `tail`\n\n### Reconfiguring & Restarting\n\nAfter you've edit environmental variables or settings.json, you can reconfigure the app without deploying again. Use following command for that.\n\n    mup reconfig\n\nThis will also restart the app, so you can use it for that purpose even if you didn't change the configuration file. \n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/arunoda/meteor-up/issues"
  },
  "homepage": "https://github.com/arunoda/meteor-up",
  "_id": "mup@0.1.12",
  "dist": {
    "shasum": "295c41726d9e8f793b108fa4215cca89708b1483"
  },
  "_from": "mup@",
  "_resolved": "https://registry.npmjs.org/mup/-/mup-0.1.12.tgz"
}
