{
  "name": "demeteorizer",
  "description": "Converts a Meteor app into a \"standard\" Node.js application.",
  "keywords": [
    "meteor"
  ],
  "version": "0.5.0",
  "author": {
    "name": "Modulus",
    "email": "support@modulus.io"
  },
  "maintainers": [
    {
      "name": "Brandon Cannaday",
      "email": "brandon@modulus.io"
    }
  ],
  "contributors": [
    {
      "name": "Brandon Cannaday",
      "email": "brandon@modulus.io"
    },
    {
      "name": "Bret Fisher",
      "email": "me@bfish.us"
    },
    {
      "name": "Matt Hernandez",
      "email": "matt@modulus.io"
    },
    {
      "name": "Tarang Patel",
      "email": "t@ran.gg"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/OnModulus/demeteorizer"
  },
  "dependencies": {
    "commander": "1.1.x",
    "async": "0.2.x",
    "fs-tools": "0.2.x"
  },
  "devDependencies": {
    "mocha": "1.8.x"
  },
  "main": "./lib/demeteorizer",
  "bin": {
    "demeteorizer": "./bin/demeteorizer"
  },
  "preferGlobal": true,
  "engines": {
    "node": ">= 0.8.0"
  },
  "readme": "Demeteorizer\n=================\n\nCLI tool to convert a Meteor app into a \"standard\" Node.js application. The resulting app contains\na package.json file with all required dependencies and can be easily ported to your own servers or\n[Node.js PAAS providers](https://github.com/joyent/node/wiki/Node-Hosting).\n\n## Installing\n    $ npm install -g demeteorizer\n\n## Usage\n    $ cd /path/to/meteor/app\n    $ demeteorizer [options]\n\n    --version             print demeteorizer version and exit.\n    --output, -o          output directory for converted app. Defaults to ./.demeteorized.\n    --node_version, -n    version of node to override minimum node version variable. Defaults to 0.10.22.\n    --release, -r         sets the Meteor version. Defaults to latest installed.\n    --tarball, -t         tarball path. If specified creates a tar.gz of demeteorized application instead of directory.\n    --app_name, -a        value to put in the package.json name field. Defaults to the name of the current directory.\n\n## Examples\nConvert the Meteor app in the current directory and output to ./.demeteorized\n\n    $ demeteorizer\n\nConvert the Meteor app in the current directory and output to ~/meteor-app/converted\n\n    $ demeteorizer -o ~/meteor-app/converted\n\nConvert the Meteor app in the current directory, output to ~/meteor-app/converted, and set minimum\nnode version to 0.8.26.\n\n    $ demeteorizer -o ~/meteor-app/converted -n v0.8.26\n\n## Running Resulting App\nMeteor apps make use of the following environment variables:\n\n    1. MONGO_URL='mongodb://user:password@host:port/databasename?autoReconnect=true'\n    2. MAIL_URL='smtp://user:password@mailhost:port/' (optional)\n    3. ROOT_URL='http://example.com' (optional)\n    4. PORT=8080 (optional, defaults to 80)\n\nRun the app:\n\n    $ cd /your/output/directory\n    $ npm install\n    $ node main.js\n\n## Full Example\nThe following steps will create a Meteor example app, convert it, and run it.\n\n    $ meteor create --example leaderboard\n    $ demeteorizer\n    $ cd ./.demeteorized\n    $ npm install\n    $ MONGO_URL=[your-url] PORT=8080 node main.js\n\n## Tarball\nThe --tarball option can be used to create a tar.gz of the application instead of putting the\nconverted app in a directory.\n\n    $ demeteorizer --tarball /path/to/tarball.tar.gz\n\n## Support\nDemeteorizer has been tested with the current Meteor example apps. If you find an app that doesn't\nconvert correctly, throw an issue in Github -\n[https://github.com/onmodulus/demeteorizer/issues](https://github.com/onmodulus/demeteorizer/issues)\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/OnModulus/demeteorizer/issues"
  },
  "homepage": "https://github.com/OnModulus/demeteorizer",
  "_id": "demeteorizer@0.5.0",
  "dist": {
    "shasum": "d69c6838ae1abaeb41923a71dbb7ff6019fe0b65"
  },
  "_from": "demeteorizer@",
  "_resolved": "https://registry.npmjs.org/demeteorizer/-/demeteorizer-0.5.0.tgz"
}
